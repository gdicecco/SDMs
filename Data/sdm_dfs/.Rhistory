library(dplyr)
library(glm2)
library(gam)
library(randomForest)
library(ggplot2)
library(dismo)
library(raster)
library(maptools)
library(pROC)
library(hydroGOF)
setwd("C:/git/SDMs")
bbs_occ = read.csv("Data/bbs_sub1.csv", header=TRUE)
bbs_occ_sub = bbs_occ %>% filter(Aou > 2880) %>%
filter(Aou < 3650 | Aou > 3810) %>%
filter(Aou < 3900 | Aou > 3910) %>%
filter(Aou < 4160 | Aou > 4210) %>%
filter(Aou != 7010)
exp_pres = read.csv("Data/expect_pres.csv", header = TRUE)
exp_pres = exp_pres[,c("stateroute","spAOU")]
traits = read.csv("Data/Master_RO_Correlates.csv", header = TRUE)
bsize = read.csv("data/DunningBodySize_old_2008.11.12.csv", header = TRUE)
lat_long = read.csv("Data/latlongs.csv", header = TRUE)
tax_code = read.csv("Data/Tax_AOU_Alpha.csv", header = TRUE)
bi_env = read.csv("Data/all_env.csv", header = TRUE)
bi_means = bi_env[,c("stateroute","mat.mean", "elev.mean", "map.mean", "ndvi.mean")]
env_bio = read.csv("Data/env_bio.csv", header = TRUE)
env_bio = na.omit(env_bio)
env_bio_sub = env_bio[,c(1, 21:39)]
# env_bio[,c("stateroute","bio.mean.bio4", "bio.mean.bio5", "bio.mean.bio6", "bio.mean.bio13", "bio.mean.bio14")]
all_env = left_join(bi_means, env_bio_sub, by = "stateroute")
# env_bio[,c("stateroute","bio.mean.bio4", "bio.mean.bio5", "bio.mean.bio6", "bio.mean.bio13", "bio.mean.bio14")]
all_env = left_join(bi_means, env_bio_sub, by = "stateroute")
#update tax_code Winter Wren
tax_code$AOU_OUT[tax_code$AOU_OUT == 7220] <- 7222
tax_code$AOU_OUT[tax_code$AOU_OUT == 4810] = 4812
tax_code$AOU_OUT[tax_code$AOU_OUT == 4123] = 4120
# BBS cleaning
bbs_inc_absence = full_join(bbs_occ_sub, exp_pres, by = c("Aou" ="spAOU", "stateroute" = "stateroute"))
bbs_inc_absence$occ[is.na(bbs_inc_absence$occ)] <- 0
bbs_inc_absence$presence = 0
bbs_inc_absence$presence[bbs_inc_absence$occ > 0] <- 1
num_occ = bbs_inc_absence %>% group_by(Aou) %>% tally(presence) %>% left_join(bbs_inc_absence, ., by = "Aou")
# 412 focal species
bbs_final_occ = filter(num_occ,nn > 1)
bbs_occ_code = left_join(bbs_final_occ, tax_code, by = c("Aou" = "AOU_OUT"))
# 319 focal species
bbs_focal_spp = filter(bbs_occ_code, Aou %in% tax_code$AOU_OUT)
bbs_final_occ_ll = left_join(bbs_focal_spp, lat_long, by = "stateroute")
bbs_final_occ_ll = bbs_final_occ_ll[,c("Aou", "stateroute", "occ", "presence", "ALPHA.CODE",
"latitude", "longitude")]
bbs_final_occ_ll$sp_success = 15 * bbs_final_occ_ll$occ
bbs_final_occ_ll$sp_fail = 15 * (1 - bbs_final_occ_ll$occ)
# write.csv(bbs_occ_code, "Data/final_focal_spp.csv", row.names = FALSE)
# Thuiller 2014 source for choosing these vars
# http://worldclim.org/bioclim
# BIO4 = temperature seasonality (intra-annual standard deviation * 100)
# BIO5 = maximum temperature of the warmest month
# BIO6 = minimum temperature of the coldest month
# BIO13 = precipitation of the wettest month
# BIO14 = precipitation of the driest month
# all_bio.pca <- prcomp(env_bio[,c(21:39)], center = TRUE,scale. = TRUE)
# library(ggbiplot)
#### MAPS #####
auc_df = read.csv("Data/auc_df.csv", header = TRUE)
View(auc_df)
auc_df_traits = left_join(auc_df_merge, traits, by = "AOU") %>%
left_join(., tax_code, by = c("AOU" = "AOU_OUT"))
auc_df_merge = left_join(auc_df, num_pres, by = c("AOU" = "Aou"))
num_pres = bbs_final_occ_ll %>%
group_by(Aou) %>%
filter(., presence == "1") %>%
summarise(n = n_distinct(stateroute))
num_routes = bbs_final_occ_ll %>% group_by(Aou) %>%
summarise(n = n_distinct(stateroute))  %>%
filter(., n >= 40)
auc_df_merge = left_join(auc_df, num_pres, by = c("AOU" = "Aou"))
auc_df_traits = left_join(auc_df_merge, traits, by = "AOU") %>%
left_join(., tax_code, by = c("AOU" = "AOU_OUT"))
auc_df_traits$diff = auc_df_traits$AUC - auc_df_traits$AUC_pres
occ_sub = subset(auc_df_traits,diff >= 0)
pres_sub = subset(auc_df_traits,diff < 0)
head(auc_df_traits)
ggplot(auc_df_traits, aes(x = rmse_occ, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy AUC")) + ylab(bquote("Presence AUC"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)
ggplot(auc_df_traits, aes(x = rmse_occ, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy AUC")) + ylab(bquote("Presence AUC"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))
ggplot(auc_df_traits, aes(x = rmse_occ, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy AUC")) + ylab(bquote("Presence AUC"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5))
ggplot(auc_df_traits, aes(x = rmse_occ, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(auc_df_traits, aes(x = AUC, y = AUC_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(auc_df_traits, aes(x = AUC, y = AUC_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5)
# plot GLM occ v pres
#  + geom_label(data = auc_df_traits, aes(x = AUC, y = AUC_pres, label = ALPHA.CODE))
r1 = ggplot(auc_df_traits, aes(x = rmse_gam, y = rmse_gam_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(auc_df_traits, aes(x = rmse_gam, y = rmse_gam_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
View(auc_df_traits)
ggplot(auc_df_traits, aes(x = rmse_rf, y = rmse_rf_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 0.5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
# ggsave("Figures/Occ_
ggplot(auc_df_traits, aes(x = rmse_rf, y = rmse_rf_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point()
ggplot(auc_df_traits, aes(x = rmse_rf, y = rmse_rf_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))
ggplot(auc_df_traits, aes(x = rmse_rf, y = rmse_rf_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5)
ggplot(auc_df_traits, aes(x = rmse_rf, y = rmse_rf_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(auc_df_traits, aes(x = rmse, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, 5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(auc_df_traits, aes(x = rmse, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, .5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
View(auc_df)
ggplot(auc_df_traits, aes(x = rmse_occ, y = rmse_pres)) +theme_classic()+ theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + xlab(bquote("Occupancy RMSE")) + ylab(bquote("Presence RMSE"))+ geom_abline(intercept = 0, slope = 1, col = "black", lwd = 1.5)  +
geom_point(shape=16, aes(size = auc_df_traits$n))  + geom_smooth(method='lm', se=FALSE, col="blue",linetype="longdash", lwd =2.5) + scale_y_continuous(limit = c(0, 0.5)) + scale_x_continuous(limit = c(0, .5)) +
theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) +
guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
View(auc_df)
View(auc_df_traits)
# density plot
auc_plot = gather(auc_df, mod, AUC, AUC:AUC_me_pres)
library(tidyr)
# density plot
auc_plot = gather(auc_df, mod, AUC, AUC:AUC_me_pres)
ggplot(auc_plot, aes(AUC, color = mod)) + geom_density(lwd = 1.5)  + theme_classic() + theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) + theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
# density plot
auc_plot = gather(auc_df, mod, AUC, c("AOU", "AUC", "AUC_pres", "AUC_gam", "AUC_gam_pres", "AUC_RF", "AUC_RF_pres", "AUC_me_pres"))
ggplot(auc_plot, aes(AUC, color = mod)) + geom_density(lwd = 1.5)  + theme_classic() + theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) + theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
# density plot
auc_plot = gather(auc_df, mod, AUC, c("AUC", "AUC_pres", "AUC_gam", "AUC_gam_pres", "AUC_RF", "AUC_RF_pres", "AUC_me_pres"))
ggplot(auc_plot, aes(AUC, color = mod)) + geom_density(lwd = 1.5)  + theme_classic() + theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) + theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
rmse_plot = gather(auc_df, mod, AUC, c("rmse_occ", "rmse_pres","rmse_gam", "rmse_gam_pres", "rmse_rf", "rmse_rf_pres"))
rmse_plot = gather(auc_df, mod, rmse, c("rmse_occ", "rmse_pres","rmse_gam", "rmse_gam_pres", "rmse_rf", "rmse_rf_pres"))
ggplot(rmse_plot, aes(rmse, color = mod)) + geom_density(lwd = 1.5)  + theme_classic() + theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) + theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.position = c(0.1,0.9), legend.key.width=unit(2, "lines"))
ggplot(rmse_plot, aes(rmse, color = mod)) + geom_density(lwd = 1.5)  + theme_classic() + theme(axis.text.x=element_text(size = 32),axis.ticks=element_blank(), axis.text.y=element_text(size=32)) + theme(axis.title.x=element_text(size=36, vjust = 2),axis.title.y=element_text(size=36, angle=90, vjust = 2)) + guides(colour = guide_legend(override.aes = list(shape = 15))) +
theme(legend.title=element_blank(), legend.text=element_text(size=15), legend.key.width=unit(2, "lines"))
View(auc_df)
i = sp_list[1]
i
sp_list = unique(bbs_final_occ_ll$Aou)
i
i = sp_list[1]
i
sdm_output = c()
print(i)
bbs_sub <- filter(bbs_final_occ_ll, Aou == i)
temp <- filter(all_env, stateroute %in% bbs_sub$stateroute)
sdm_input <- left_join(bbs_sub, temp, by = "stateroute")
sdm_input = na.omit(sdm_input)
View(sdm_input)
View(sdm_input)
summary(glm(cbind(sp_success, sp_fail) ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input))
cbind(sdm_input$sp_success, sdm_input$sp_fail)
class(sdm_input$sp_success)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_occ
summary(rf_occ)
i = 4090
sdm_output = c()
print(i)
bbs_sub <- filter(bbs_final_occ_ll, Aou == i)
temp <- filter(all_env, stateroute %in% bbs_sub$stateroute)
sdm_input <- left_join(bbs_sub, temp, by = "stateroute")
sdm_input = na.omit(sdm_input)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_occ
rf_pres <- randomForest(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
pred_rf_occ <- predict(rf_occ,type=c("response"))
pred_rf_pr <- predict(rf_pres,type=c("response"))
sdm_output = cbind(sdm_input, pred_glm_pr, pred_glm_occ, pred_gam_pr, pred_gam_occ, pred_rf_occ, pred_rf_pr, max_pred_pres)
glm_occ <- glm(cbind(sp_success, sp_fail) ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
glm_pres <- glm(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
gam_occ <- mgcv::gam(cbind(sp_success, sp_fail) ~ s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
gam_pres <- mgcv::gam(presence ~  s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_pres <- randomForest(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
max_pres = SpatialPointsDataFrame(coords = sdm_input[,c("longitude", "latitude")],
data = sdm_input[,c("longitude", "latitude", "presence")],
proj4string = CRS("+proj=laea +lat_0=45.235 +lon_0=-106.675 +units=km"))
# max_ind_occ = dismo::maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")], sdm_input$presence)
max_ind_pres = maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")], sdm_input$presence)
# predict
pred_glm_occ <- predict(glm_occ,type=c("response"))
pred_glm_pr <- predict(glm_pres,type=c("response"))
pred_gam_occ <- predict(gam_occ,type=c("response"))
pred_gam_pr <- predict(gam_pres,type=c("response"))
pred_rf_occ <- predict(rf_occ,type=c("response"))
pred_rf_pr <- predict(rf_pres,type=c("response"))
max_pred_pres <- predict(max_ind_pres, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")])
# max_pred_occ <- predict(max_ind_occ, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")])
sdm_output = cbind(sdm_input, pred_glm_pr, pred_glm_occ, pred_gam_pr, pred_gam_occ, pred_rf_occ, pred_rf_pr, max_pred_pres)
rmse_occ <- rmse(sdm_output$pred_glm_occ, sdm_output$occ)
auc =  roc(sdm_output$occ ~ sdm_output$pred_glm_occ)$auc[1]
rmse_pres <- rmse(sdm_output$pred_glm_pr, sdm_output$presence)
auc_pres =  roc(sdm_output$presence ~ sdm_output$pred_glm_pr)$auc[1]
rmse_gam <- rmse(as.vector(sdm_output$pred_gam_occ), sdm_output$occ)
auc_gam =  roc(sdm_output$occ ~ sdm_output$pred_gam_occ)$auc[1]
rmse_gam_pres <- rmse(as.vector(sdm_output$pred_gam_pr), sdm_output$presence)
auc_gam_pres = roc(sdm_output$presence ~ sdm_output$pred_gam_pr)$auc[1]
rmse_rf <- rmse(sdm_output$pred_rf_occ, sdm_output$occ)
auc_rf =  roc(sdm_output$occ ~ sdm_output$pred_rf_occ)$auc[1]
rmse_rf_pres <- rmse(sdm_output$pred_rf_pr, sdm_output$presence)
auc_rf_pres =  roc(sdm_output$presence ~ sdm_output$pred_rf_pr)$auc[1]
rmse_me_pres <- rmse(sdm_output$max_pred_pres, sdm_output$presence)
auc_me_pres =  roc(sdm_output$presence ~ sdm_output$max_pred_pres)$auc[1]
rmse_rf
rmse_rf_pres
setwd("Data/sdm_dfs/")
pdf('AUC_Curves.pdf', height = 8, width = 10)
par(mfrow = c(2, 3))
auc_df = c()
sp_list = unique(bbs_final_occ_ll$Aou)
for(i in sp_list[119:319]){
sdm_output = c()
print(i)
bbs_sub <- filter(bbs_final_occ_ll, Aou == i)
temp <- filter(all_env, stateroute %in% bbs_sub$stateroute)
sdm_input <- left_join(bbs_sub, temp, by = "stateroute")
sdm_input = na.omit(sdm_input)
# print(length(sdm_input$stateroute))
if(length(unique(sdm_input$stateroute)) > 40 & length(unique(sdm_input$presence)) >1){
if(nrow(filter(sdm_input, presence == 1)) > 49){
glm_occ <- glm(cbind(sp_success, sp_fail) ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
glm_pres <- glm(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
gam_occ <- mgcv::gam(cbind(sp_success, sp_fail) ~ s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
gam_pres <- mgcv::gam(presence ~  s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_pres <- randomForest(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
max_pres = SpatialPointsDataFrame(coords = sdm_input[,c("longitude", "latitude")],
data = sdm_input[,c("longitude", "latitude", "presence")],
proj4string = CRS("+proj=laea +lat_0=45.235 +lon_0=-106.675 +units=km"))
# max_ind_occ = dismo::maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")], sdm_input$presence)
max_ind_pres = maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")], sdm_input$presence)
# predict
pred_glm_occ <- predict(glm_occ,type=c("response"))
pred_glm_pr <- predict(glm_pres,type=c("response"))
pred_gam_occ <- predict(gam_occ,type=c("response"))
pred_gam_pr <- predict(gam_pres,type=c("response"))
pred_rf_occ <- predict(rf_occ,type=c("response"))
pred_rf_pr <- predict(rf_pres,type=c("response"))
max_pred_pres <- predict(max_ind_pres, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")])
# max_pred_occ <- predict(max_ind_occ, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")])
sdm_output = cbind(sdm_input, pred_glm_pr, pred_glm_occ, pred_gam_pr, pred_gam_occ, pred_rf_occ, pred_rf_pr, max_pred_pres)
rmse_occ <- rmse(sdm_output$pred_glm_occ, sdm_output$occ)
auc =  roc(sdm_output$occ ~ sdm_output$pred_glm_occ)$auc[1]
rmse_pres <- rmse(sdm_output$pred_glm_pr, sdm_output$presence)
auc_pres =  roc(sdm_output$presence ~ sdm_output$pred_glm_pr)$auc[1]
rmse_gam <- rmse(as.vector(sdm_output$pred_gam_occ), sdm_output$occ)
auc_gam =  roc(sdm_output$occ ~ sdm_output$pred_gam_occ)$auc[1]
rmse_gam_pres <- rmse(as.vector(sdm_output$pred_gam_pr), sdm_output$presence)
auc_gam_pres = roc(sdm_output$presence ~ sdm_output$pred_gam_pr)$auc[1]
rmse_rf <- rmse(sdm_output$pred_rf_occ, sdm_output$occ)
auc_rf =  roc(sdm_output$occ ~ sdm_output$pred_rf_occ)$auc[1]
rmse_rf_pres <- rmse(sdm_output$pred_rf_pr, sdm_output$presence)
auc_rf_pres =  roc(sdm_output$presence ~ sdm_output$pred_rf_pr)$auc[1]
rmse_me_pres <- rmse(sdm_output$max_pred_pres, sdm_output$presence)
auc_me_pres =  roc(sdm_output$presence ~ sdm_output$max_pred_pres)$auc[1]
auc_df = rbind(auc_df, c(i, rmse_occ, auc, rmse_pres, auc_pres, rmse_gam, auc_gam, rmse_gam_pres, auc_gam_pres,  rmse_rf, auc_rf, rmse_rf_pres, auc_rf_pres, auc_me_pres))
j = unique(sdm_input$ALPHA.CODE)
plot = plot(roccurve, main = paste("AUC Curve for ", j, ".csv",
sep=""))
}
}
# write.csv(sdm_output, paste("sdm_output_", i, ".csv",
#                        sep=""), row.names = FALSE)
}
dev.off()
setwd("Data/sdm_dfs/")
pdf('AUC_Curves.pdf', height = 8, width = 10)
par(mfrow = c(2, 3))
auc_df = c()
sp_list = unique(bbs_final_occ_ll$Aou)
for(i in sp_list[119:319]){
sdm_output = c()
print(i)
bbs_sub <- filter(bbs_final_occ_ll, Aou == i)
temp <- filter(all_env, stateroute %in% bbs_sub$stateroute)
sdm_input <- left_join(bbs_sub, temp, by = "stateroute")
sdm_input = na.omit(sdm_input)
# print(length(sdm_input$stateroute))
if(length(unique(sdm_input$stateroute)) > 40 & length(unique(sdm_input$presence)) >1){
if(nrow(filter(sdm_input, presence == 1)) > 49){
glm_occ <- glm(cbind(sp_success, sp_fail) ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
glm_pres <- glm(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
gam_occ <- mgcv::gam(cbind(sp_success, sp_fail) ~ s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
gam_pres <- mgcv::gam(presence ~  s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_pres <- randomForest(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
max_pres = SpatialPointsDataFrame(coords = sdm_input[,c("longitude", "latitude")],
data = sdm_input[,c("longitude", "latitude", "presence")],
proj4string = CRS("+proj=laea +lat_0=45.235 +lon_0=-106.675 +units=km"))
# max_ind_occ = dismo::maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")], sdm_input$presence)
max_ind_pres = maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")], sdm_input$presence)
# predict
pred_glm_occ <- predict(glm_occ,type=c("response"))
pred_glm_pr <- predict(glm_pres,type=c("response"))
pred_gam_occ <- predict(gam_occ,type=c("response"))
pred_gam_pr <- predict(gam_pres,type=c("response"))
pred_rf_occ <- predict(rf_occ,type=c("response"))
pred_rf_pr <- predict(rf_pres,type=c("response"))
max_pred_pres <- predict(max_ind_pres, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")])
# max_pred_occ <- predict(max_ind_occ, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")])
sdm_output = cbind(sdm_input, pred_glm_pr, pred_glm_occ, pred_gam_pr, pred_gam_occ, pred_rf_occ, pred_rf_pr, max_pred_pres)
rmse_occ <- rmse(sdm_output$pred_glm_occ, sdm_output$occ)
auc =  roc(sdm_output$occ ~ sdm_output$pred_glm_occ)$auc[1]
rmse_pres <- rmse(sdm_output$pred_glm_pr, sdm_output$presence)
auc_pres =  roc(sdm_output$presence ~ sdm_output$pred_glm_pr)$auc[1]
rmse_gam <- rmse(as.vector(sdm_output$pred_gam_occ), sdm_output$occ)
auc_gam =  roc(sdm_output$occ ~ sdm_output$pred_gam_occ)$auc[1]
rmse_gam_pres <- rmse(as.vector(sdm_output$pred_gam_pr), sdm_output$presence)
auc_gam_pres = roc(sdm_output$presence ~ sdm_output$pred_gam_pr)$auc[1]
rmse_rf <- rmse(sdm_output$pred_rf_occ, sdm_output$occ)
auc_rf =  roc(sdm_output$occ ~ sdm_output$pred_rf_occ)$auc[1]
rmse_rf_pres <- rmse(sdm_output$pred_rf_pr, sdm_output$presence)
auc_rf_pres =  roc(sdm_output$presence ~ sdm_output$pred_rf_pr)$auc[1]
rmse_me_pres <- rmse(sdm_output$max_pred_pres, sdm_output$presence)
auc_me_pres =  roc(sdm_output$presence ~ sdm_output$max_pred_pres)$auc[1]
auc_df = rbind(auc_df, c(i, rmse_occ, auc, rmse_pres, auc_pres, rmse_gam, auc_gam, rmse_gam_pres, auc_gam_pres,  rmse_rf, auc_rf, rmse_rf_pres, auc_rf_pres, auc_me_pres))
j = unique(sdm_input$ALPHA.CODE)
# plot = plot(roccurve, main = paste("AUC Curve for ", j, ".csv",
sep=""))
}
}
# write.csv(sdm_output, paste("sdm_output_", i, ".csv",
#                        sep=""), row.names = FALSE)
}
dev.off()
setwd("Data/sdm_dfs/")
pdf('AUC_Curves.pdf', height = 8, width = 10)
par(mfrow = c(2, 3))
auc_df = c()
sp_list = unique(bbs_final_occ_ll$Aou)
for(i in sp_list[119:319]){
sdm_output = c()
print(i)
bbs_sub <- filter(bbs_final_occ_ll, Aou == i)
temp <- filter(all_env, stateroute %in% bbs_sub$stateroute)
sdm_input <- left_join(bbs_sub, temp, by = "stateroute")
sdm_input = na.omit(sdm_input)
# print(length(sdm_input$stateroute))
if(length(unique(sdm_input$stateroute)) > 40 & length(unique(sdm_input$presence)) >1){
if(nrow(filter(sdm_input, presence == 1)) > 49){
glm_occ <- glm(cbind(sp_success, sp_fail) ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
glm_pres <- glm(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
gam_occ <- mgcv::gam(cbind(sp_success, sp_fail) ~ s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
gam_pres <- mgcv::gam(presence ~  s(elev.mean) + s(ndvi.mean) + s(bio.mean.bio1) + s(bio.mean.bio2) + s(bio.mean.bio3) + s(bio.mean.bio4) + s(bio.mean.bio7) + s(bio.mean.bio8) + s(bio.mean.bio9) + s(bio.mean.bio10) + s(bio.mean.bio11) + s(bio.mean.bio12) + s(bio.mean.bio13) + s(bio.mean.bio14) + s(bio.mean.bio15) + s(bio.mean.bio16) + s(bio.mean.bio17) + s(bio.mean.bio18) + s(bio.mean.bio19), family = binomial(link = logit), data = sdm_input)
rf_occ <- randomForest(sp_success/15 ~elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
rf_pres <- randomForest(presence ~ elev.mean + ndvi.mean +bio.mean.bio1 + bio.mean.bio2 + bio.mean.bio3 + bio.mean.bio4 + bio.mean.bio7 + bio.mean.bio8 + bio.mean.bio9 + bio.mean.bio10 + bio.mean.bio11 + bio.mean.bio12 + bio.mean.bio13 + bio.mean.bio14 +bio.mean.bio15+ bio.mean.bio16 +bio.mean.bio17 +bio.mean.bio18 +bio.mean.bio19, family = binomial(link = logit), data = sdm_input)
max_pres = SpatialPointsDataFrame(coords = sdm_input[,c("longitude", "latitude")],
data = sdm_input[,c("longitude", "latitude", "presence")],
proj4string = CRS("+proj=laea +lat_0=45.235 +lon_0=-106.675 +units=km"))
# max_ind_occ = dismo::maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")], sdm_input$presence)
max_ind_pres = maxent(sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")], sdm_input$presence)
# predict
pred_glm_occ <- predict(glm_occ,type=c("response"))
pred_glm_pr <- predict(glm_pres,type=c("response"))
pred_gam_occ <- predict(gam_occ,type=c("response"))
pred_gam_pr <- predict(gam_pres,type=c("response"))
pred_rf_occ <- predict(rf_occ,type=c("response"))
pred_rf_pr <- predict(rf_pres,type=c("response"))
max_pred_pres <- predict(max_ind_pres, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2","bio.mean.bio3","bio.mean.bio4","bio.mean.bio7","bio.mean.bio8","bio.mean.bio9","bio.mean.bio10","bio.mean.bio11","bio.mean.bio12","bio.mean.bio13","bio.mean.bio14","bio.mean.bio15","bio.mean.bio16","bio.mean.bio17","bio.mean.bio18","bio.mean.bio19", "ndvi.mean")])
# max_pred_occ <- predict(max_ind_occ, sdm_input[,c("bio.mean.bio1", "elev.mean", "bio.mean.bio2", "ndvi.mean")])
sdm_output = cbind(sdm_input, pred_glm_pr, pred_glm_occ, pred_gam_pr, pred_gam_occ, pred_rf_occ, pred_rf_pr, max_pred_pres)
rmse_occ <- rmse(sdm_output$pred_glm_occ, sdm_output$occ)
auc =  roc(sdm_output$occ ~ sdm_output$pred_glm_occ)$auc[1]
rmse_pres <- rmse(sdm_output$pred_glm_pr, sdm_output$presence)
auc_pres =  roc(sdm_output$presence ~ sdm_output$pred_glm_pr)$auc[1]
rmse_gam <- rmse(as.vector(sdm_output$pred_gam_occ), sdm_output$occ)
auc_gam =  roc(sdm_output$occ ~ sdm_output$pred_gam_occ)$auc[1]
rmse_gam_pres <- rmse(as.vector(sdm_output$pred_gam_pr), sdm_output$presence)
auc_gam_pres = roc(sdm_output$presence ~ sdm_output$pred_gam_pr)$auc[1]
rmse_rf <- rmse(sdm_output$pred_rf_occ, sdm_output$occ)
auc_rf =  roc(sdm_output$occ ~ sdm_output$pred_rf_occ)$auc[1]
rmse_rf_pres <- rmse(sdm_output$pred_rf_pr, sdm_output$presence)
auc_rf_pres =  roc(sdm_output$presence ~ sdm_output$pred_rf_pr)$auc[1]
rmse_me_pres <- rmse(sdm_output$max_pred_pres, sdm_output$presence)
auc_me_pres =  roc(sdm_output$presence ~ sdm_output$max_pred_pres)$auc[1]
auc_df = rbind(auc_df, c(i, rmse_occ, auc, rmse_pres, auc_pres, rmse_gam, auc_gam, rmse_gam_pres, auc_gam_pres,  rmse_rf, auc_rf, rmse_rf_pres, auc_rf_pres, auc_me_pres))
j = unique(sdm_input$ALPHA.CODE)
# plot = plot(roccurve, main = paste("AUC Curve for ", j, ".csv",
#         sep=""))
}
}
# write.csv(sdm_output, paste("sdm_output_", i, ".csv",
#                        sep=""), row.names = FALSE)
}
warnings()
auc_df = data.frame(auc_df)
names(auc_df) = c("AOU", "rmse_occ", "AUC", "rmse_pres","AUC_pres", "rmse_gam", "AUC_gam", "rmse_gam_pres", "AUC_gam_pres",  "rmse_rf", "AUC_RF", "rmse_rf_pres", "AUC_RF_pres", "AUC_me_pres")
View(auc_df)
View(auc_df_merge)
